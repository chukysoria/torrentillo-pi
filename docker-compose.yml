version: '2.1'

volumes:
    adguardhome_work:
    adguardhome_conf:
    sonarr_conf:
    radarr_conf:
    bazarr_conf:
    certs:
    traefik_conf:
    duplicati:
    prowlarr_conf:


services:
    duplicati:
        image: lscr.io/linuxserver/duplicati:v2.0.6.3-2.0.6.3_beta_2021-06-17-ls131 # SIGSEV on later versions
        environment:
            PUID: "0"
            PGID: "0"
            CLI_ARGS: --webservice-interface=any
        networks:
            - web_net
        volumes:
            - duplicati:/config
            - sonarr_conf:/source/sonarr_conf
            - radarr_conf:/source/radarr_conf
            - bazarr_conf:/source/bazarr_conf
            - adguardhome_conf:/source/adguardhome_conf
            - traefik_conf:/source/traefik_conf
            - prowlarr_conf:/source/prowlarr_conf
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.duplicati.rule=Host(`duplicati.boulebar.duckdns.org`)"

    #adguard:
    #    image: adguard/adguardhome:latest
    #    network_mode: host
    #    privileged: true
    #    volumes:
    #        - 'adguardhome_work:/opt/adguardhome/work:rw'
    #        - 'adguardhome_conf:/opt/adguardhome/conf:rw'

    sonarr:
        build:
            context: .
            dockerfile: Dockerfile-sonarr
        cap_add:
            - SYS_ADMIN
        volumes:
            - 'sonarr_conf:/config:rw'
        networks:
            - web_net
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.sonarr.rule=Host(`sonarr.boulebar.duckdns.org`)"

    #radarr:
    #    build:
    #        context: .
    #        dockerfile: Dockerfile-radarr
    #    cap_add:
    #        - SYS_ADMIN
    #    volumes:
    #        - 'radarr_conf:/config:rw'
    #    networks:
    #        - web_net
    #    labels:
    #        - "traefik.enable=true"
    #        - "traefik.http.routers.radarr.rule=Host(`radarr.boulebar.duckdns.org`)"

    bazarr:
        build:
            context: .
            dockerfile: Dockerfile-bazarr
        cap_add:
            - SYS_ADMIN
        volumes:
            - 'bazarr_conf:/config:rw'
        depends_on:
            - sonarr
        #    - radarr
        networks:
            - web_net
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.bazarr.rule=Host(`bazarr.boulebar.duckdns.org`)"

    duckdns:
        image: lscr.io/linuxserver/duckdns:arm32v7-latest

    traefik:
        build:
            context: .
            dockerfile: Dockerfile-traefik
        ports:
            - 80:80/tcp
            - 443:443/tcp
            - 8080:8080/tcp
            #- 9900:9900/tcp
            #- 9901:9901/tcp
        networks:
            - web_net
        volumes:
            - "certs:/var/certs:rw"
            - "traefik_conf:/etc/traefik/:rw"
        labels:
            - "io.balena.features.balena-socket=true"

    jellyfin:
        build:
            context: .
            dockerfile: Dockerfile-jellyfin
        cap_add:
            - SYS_ADMIN
        networks:
            - web_net
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.boulebar.duckdns.org`)"
            - "traefik.http.routers.jellyfin.service=svc-jellyfin"
            - "traefik.http.services.svc-jellyfin.loadbalancer.server.port=8096"
            - "traefik.udp.routers.jellyfinudp.entrypoints=jellyfin_locate"
            - "traefik.udp.routers.jellyfinudp.service=service-udp-jellyfin"
            - "traefik.udp.services.service-udp-jellyfin.loadbalancer.server.port=7359"
            - "traefik.udp.routers.jellyfinstreaming.entrypoints=streaming"
            - "traefik.udp.routers.jellyfinstreaming.service=service-jellyfin-streaming"
            - "traefik.udp.services.service-jellyfin-streaming.loadbalancer.server.port=1900"
    prowlarr:
        container_name: prolarr
        image: lscr.io/linuxserver/prowlarr:latest
        networks:
            - web_net
        volumes:
            - "prowlarr_conf:/config:rw"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.boulebar.duckdns.org`)"

    #hub-agent:
    #    image: ghcr.io/traefik/hub-agent-traefik:latest
    #    container_name: hub-agent
    #    command:
    #        - run
    #        - --hub.token=20d78749-e7d2-428f-a0ca-a359272e8ec4
    #        - --auth-server.advertise-url=http://hub-agent
    #        - --traefik.docker.endpoint=unix:///var/run/balena.sock
    #        - --traefik.host=traefik
    #        - --traefik.tls.insecure=true
    #    labels:
    #        - "io.balena.features.balena-socket=true"
    #    depends_on:
    #        - traefik
    #    networks:
    #        - web_net

networks:
    web_net:
        driver: bridge
