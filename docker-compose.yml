version: '2.1'

# Torrentillo Pi compose file

volumes:
    sonarr_conf:
    bazarr_conf:
    certs:
    traefik_conf:
    duplicati:
    prowlarr_conf:
    traefik_tailscale_conf:
    nfs_test:
        driver: local
        driver_opts:
            type: nfs
            o: "addr=192.168.1.4,nolock,soft,rw"
            device: ":/volume1"
services:
    duplicati:
        build:
            context: .
            dockerfile: Dockerfile-duplicati
        environment:
            - TAILSCALE_STATE_DIR=/config
            - TAILSCALE_HOSTNAME=duplicati
            - TAILSCALE_SERVE_PORT=8200
        networks:
            - web_net
        volumes:
            - duplicati:/config
            - sonarr_conf:/source/sonarr_conf
            - bazarr_conf:/source/bazarr_conf
            - traefik_conf:/source/traefik_conf
            - prowlarr_conf:/source/prowlarr_conf
            - traefik_tailscale_conf:/source/traefik_tailscale_conf
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.duplicati.rule=Host(`duplicati.boulebar.duckdns.org`)"

    sonarr:
        build:
            context: .
            dockerfile: Dockerfile-sonarr
        cap_add:
            - SYS_ADMIN
        volumes:
            - 'sonarr_conf:/config:rw'
        networks:
            - web_net
        environment:
            - TAILSCALE_STATE_DIR=/config
            - TAILSCALE_HOSTNAME=sonarr
            - TAILSCALE_SERVE_PORT=8989
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.sonarr.rule=Host(`sonarr.boulebar.duckdns.org`)"

    bazarr:
        build:
            context: .
            dockerfile: Dockerfile-bazarr
        cap_add:
            - SYS_ADMIN
        volumes:
            - 'bazarr_conf:/config:rw'
        depends_on:
            - sonarr
        networks:
            - web_net
        environment:
            - TAILSCALE_STATE_DIR=/config
            - TAILSCALE_HOSTNAME=bazarr
            - TAILSCALE_SERVE_PORT=6767
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.bazarr.rule=Host(`bazarr.boulebar.duckdns.org`)"

    duckdns:
        # image: lscr.io/linuxserver/duckdns:arm32v7-fb872cca-ls130
        image: ghcr.io/chukysoria/duckdns:latest

    traefik:
        build: 
            context: .
            dockerfile: Dockerfile-traefik
        ports:
            - 80:80/tcp
            - 443:443/tcp
            - 8080:8080/tcp
            - 1900:1900/udp
            - 7359:7359/udp
        networks:
            - web_net
        environment:
            - TAILSCALE_STATE_DIR=/config
            - TAILSCALE_HOSTNAME=traefik
            - DOCKER_SOCK=/var/run/balena.sock
        volumes:
            - "certs:/certs:rw"
            - "traefik_conf:/config:rw"
        labels:
            - "io.balena.features.balena-socket=true"

    traefik_tailscale:
        build: 
            context: .
            dockerfile: Dockerfile-traefik
        network_mode: host
        environment:
            - TAILSCALE_STATE_DIR=/config
            - TAILSCALE_HOSTNAME=traefik-tailscale
        volumes:             
            - "traefik_tailscale_conf:/config:rw"
            - nfs_test:/media:ro

    jellyfin:
        build:
            context: .
            dockerfile: Dockerfile-jellyfin
        cap_add:
            - SYS_ADMIN
        networks:
            - web_net
        environment:
            - TAILSCALE_STATE_DIR=/config
            - TAILSCALE_HOSTNAME=jellyfin
            - TAILSCALE_SERVE_PORT=8096
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.boulebar.duckdns.org`)"
            - "traefik.http.routers.jellyfin.service=svc-jellyfin"
            - "traefik.http.services.svc-jellyfin.loadbalancer.server.port=8096"
            - "traefik.udp.routers.jellyfinudp.entrypoints=jellyfin_locate"
            - "traefik.udp.routers.jellyfinudp.service=service-udp-jellyfin"
            - "traefik.udp.services.service-udp-jellyfin.loadbalancer.server.port=7359"
            - "traefik.udp.routers.jellyfinstreaming.entrypoints=streaming"
            - "traefik.udp.routers.jellyfinstreaming.service=service-jellyfin-streaming"
            - "traefik.udp.services.service-jellyfin-streaming.loadbalancer.server.port=1900"

    prowlarr:
        # image: lscr.io/linuxserver/prowlarr:arm32v7-1.5.2.3484-ls20
        build:
            context: .
            dockerfile: Dockerfile-prowlarr
        networks:
            - web_net
        volumes:
            - "prowlarr_conf:/config:rw"
        environment:
            - TAILSCALE_STATE_DIR=/config
            - TAILSCALE_HOSTNAME=prowlarr
            - TAILSCALE_SERVE_PORT=9696
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.boulebar.duckdns.org`)"

networks:
    web_net:
        driver: bridge
